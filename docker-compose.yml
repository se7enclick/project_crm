version: "3.7"
services:

    # imagem Docker
    docker:
        build:
            args:
                user: seven
                uid: 1000
            context: ./
            dockerfile: ./docker/Dockerfile
        image: laravel-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - '.:/var/www/'
        depends_on:
            - redis
            - queue
        networks:
            - seven_networks

    #nGinx
    nginx:
        image: nginx:alpine
        restart: unless-stopped
        extra_hosts:
            - 'projeto.local:host-gateway'
            - 'site1.local:host-gateway'
            - 'site2.local:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            LARAVEL_SAIL: 1
        volumes:
            - '.:/var/www/'
            - ./docker/nginx/:/etc/nginx/conf.d/
            - ./docker/certs/:/etc/nginx/ssl/
        networks:
            - seven_networks

    #MySQL
    mysql:
        image: mysql:latest
        restart: unless-stopped
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - ./docker/data/mysql:/var/lib/mysql
        networks:
            - seven_networks

    #phpMyadmin
    phpMyadmin:
        image: phpmyadmin/phpmyadmin
        restart: unless-stopped
        ports:
            - ${FORWARD_PHPMYADMIN_PORT:-81}:80
        environment:
            PMA_HOST: mysql
            PMA_USER: '${DB_USERNAME}'
            PMA_PASSWORD: '${DB_PASSWORD}'
            UPLOAD_LIMIT: 300M
        depends_on:
            - mysql
        networks:
            - seven_networks

    #MailHog
    mailhog:
        image: mailhog/mailhog:latest
        restart: unless-stopped
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - seven_networks

    #Redis
    redis:
        image: redis:latest
        restart: unless-stopped
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - './docker/data/redis:/data'
        networks:
            - seven_networks

    #Queue
    queue:
        build:
            args:
                user: seven
                uid: 1000
            context: ./
            dockerfile: ./docker/Dockerfile
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes:
            - './:/var/www'
        depends_on:
            - redis
        networks:
            - seven_networks

    #Memcached
    memcached:
        image: 'memcached:alpine'
        ports:
        - '${FORWARD_MEMCACHED_PORT:-11211}:11211'
        networks:
            - seven_networks

networks:
    seven_networks:
        driver: bridge
